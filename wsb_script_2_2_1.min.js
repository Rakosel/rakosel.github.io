// upd1c1 light_version	https://rakosel.github.io/wsb_script_2_2_1.min.js
//
//					https://javascriptcompressor.com/
//
// 12.11.22
//	+ Ispravil "H"
//	1127 line pravka lm75
// 747,751 stroka trim ???
// except (
// http://qaru.site/questions/66646/how-to-recognize-touch-events-using-jquery-in-safari-for-ipad-is-it-possible
// function time(){
//https://stackoverflow.com/questions/221294/how-do-you-get-a-timestamp-in-javascript
// }
// https://jscompress.com/
// https://beautifytools.com/javascript-minifier.php
// https://www.minifier.org/
// https://unminify.com/
// https://javascript-minifier.com/ https://jscompress.com/
// http://dean.edwards.name/packer/
// https://closure-compiler.appspot.com/home
// alert(time())//1300051970
// 469, 470
// https://playcode.io/new/
//
//		https://www.base64encode.org/enc/minify/

// reverse panelki dlya debug
//
//
var stopAll = false,
	ra,
	rs,
	subwdeb = false,
	lines_in,
	i,
	url;
var maOBJ, seOBJ, bmeOBJ;
var str_out = "",
	str_out1 = "";
var uart_json = {};
var temp_json = {};
var input_lm75 = {};
var scrPos = 0,
	ovShBtn0 = false;
var ast = 0;
var ua_mode = 0;
var tmranim = 2000; // animate [s]

let T_arr = new Array();
let P_arr = new Array();
let H_arr = new Array();
let temp_arr = new Array();
	
T_arr = [0,1,2,4,5,16,17,20];
H_arr = [3,8,9,18,19,21];
P_arr = [6,7,12,13];
var j_T = 0.0;
var j_H = 0.0;
var j_P = 0.0;
// reverse panelki dlya debug
var sds, mds, sets;
sds = $(".sideset");
mds = $(".macnt");
sets = $(".setcnt");
cnftmp = $(".scntf");
// rtc time auto from server
//sht30_1

    //fetch("/temp_out", "GET", txjstmp, 10);
	//	 $("#temperature").val(j_T.toString().substring(0, 6));
	//	 $("#humudity").val(j_H.toString().substring(0, 6));
	//	 $("#pressure").val(j_P.toString().substring(0, 6));
    //console.log(maOBJ);

// zapros temperature
function sub_grad() {
    maOBJ = $("#tmpo").serializeArray();
//	newPost = {
//	  username: 'example',
//	  passwd: 'param2',
//	  userid: '1',
//	}
	
newPost = {
  "array": [
    1,
    2,
    3
  ],
  "sername": true,
  "passwd": "gold",
  "userid": null,
  "object": {
    "a": "b",
    "c": "d"
  },
  "string": "Hello World"
}

	
	// RxAJAX
	url1 = "/temp_out.json?" + encodeURIComponent(JSON.stringify(newPost)) + "&";
	fetch1(url1, "GET", TxMAINAJAX, 10);

//fetch("/temp_out", {
//  method: 'GET', // Здесь так же могут быть GET, PUT, DELETE
//  headers: {
    // Добавляем необходимые заголовки
//    'Content-type': 'application/json; charset=UTF-8',
//  },
//})
//  .then((response) => response.text())
//  .then((data) => {
//    console.log(data)
    // {title: "foo", body: "bar", userId: 1, id: 101}
//  })
	
	
	//var url1 = "/temp_out.json?username=example&passwd=param2";
        //fetch1(url1, "GET", txjstmp, 10);
	

	
	//url1 = "/input_bme280_2.json?" + encodeURIComponent(JSON.stringify(newPost)) + "&";
	//fetch1(url1, "GET", txjstmp, 10);
	

}
	//  .then((newPost) => {
    //console.log(newPost)
    // {title: "foo", body: "bar", userId: 1, id: 101}
  //})

// cont: TEMP, RTC, DEBUG + Settings
function TxMAINAJAX(s, d) {
    var as1 = $(".pst1");
    var as0 = $(".pst0");
//    console.log(d);
    if (s != 200) {
        as0.removeClass("badge-success");
        as0.addClass("badge-danger");
        as0.text("Нет связи");
        as1.removeClass("badge-success");
        as1.addClass("badge-danger");
        as1.text("Нет связи");
        $(".swdeb").removeAttr("disabled");
        ftmpd();
        //console.log("Connection proplem!");
        return 0;
        //clearTimeout(rs.handle);
    } else {
        as0.removeClass("badge-danger");
        as1.removeClass("badge-danger");
        as0.addClass("badge-success");
        as1.addClass("badge-success");
        as0.text("ОК ");
		as1.text("ОК ");
        if (typeof d === "string") {
            console.log(d);
            try {
                temp_json = JSON.parse(d);
                //console.log(s, temp_json);
            } catch (e) {
                // ftvall - form clear
                ftvall("");
                //console.log(s, e.message);
                return 0;
            }
        } else {
            //console.log("d not string");
            ftvall("");
            return 0;
        }
    }
	j=1;ii=0;
	console.log("temp_json[temp])");
    if (temp_json["temp"]) {
	    
	    console.log(temp_json["temp"]);
	    
		j_T = 0.0; j_H = 0.0; j_P = 0.0;
		T_cnt = 0; H_cnt = 0; P_cnt = 0;
        for (i = 3; i <= maOBJ.length && (i - 3) <= temp_json.temp.length; i++) {
            //try {
		console.log("temp_json.temp[T_arr[ii]]): %s" parseFloat(temp_json.temp[T_arr[ii]]));
            
				if(ii<T_arr.length && parseFloat(temp_json.temp[T_arr[ii]]) != NaN && temp_json.temp[T_arr[ii]] != "#ERR")
				{
					tmpf = parseFloat(temp_json.temp[T_arr[ii]]);
					if(tmpf<0)
					{j=-1;}
					else
					{j=j*j}
					j_T+=Math.abs(tmpf);T_cnt++; 
					//console.log("a5 "+" "+ii+" "+parseFloat(temp_json.temp[T_arr[ii]])+" "+T_arr[ii]+" "+temp_arr[ii]+" "+T_arr+" "+T_cnt);
				}
				if(ii<H_arr.length && parseFloat(temp_json.temp[H_arr[ii]]) != NaN && temp_json.temp[H_arr[ii]] != "#ERR")
				{
					tmpf = parseFloat(temp_json.temp[H_arr[ii]]);
					H_cnt++;
					if(tmpf>=99.0)
					{H_cnt--;}
					else if(H_arr[ii] == 3)
					{j_H+=(parseFloat(temp_json.temp[H_arr[ii]])-9.5);}
					else 
					{j_H+=parseFloat(temp_json.temp[H_arr[ii]]);}
				}
				if(ii<P_arr.length && parseFloat(temp_json.temp[P_arr[ii]]) != NaN && temp_json.temp[P_arr[ii]] != "#ERR")
				{
					j_P+=parseFloat(temp_json.temp[P_arr[ii]]);P_cnt++;
				}	
					ii++;
				}
            $("#" + maOBJ[i].name).val(temp_json.temp[i - 3]);
        }
			j_T=(j_T*j)/T_cnt; j_H=j_H/H_cnt; j_P=j_P/P_cnt;
	}


function sdmc_sh() {
    mds.removeClass("collapse show");
    mds.addClass("collapse hide");
    sds.removeClass("collapse hide");
    sds.addClass("collapse show");
    sets.removeClass("collapse hide");
    sets.addClass("collapse show");
}

function sdmc_rm() {
    mds.removeClass("collapse hide");
    mds.addClass("collapse show");
    sds.removeClass("collapse show");
    sds.addClass("collapse hide");
    sets.removeClass("collapse show");
    sets.addClass("collapse hide");
}

function ftvall(cl) {
    for (i = 0; i < maOBJ.length; i++) {
        $("#" + maOBJ[i].name).val(cl);
        $("#" + maOBJ[i].name)
			.removeClass("is-invalid")
			.html();
        $("#" + maOBJ[i].name)
			.removeClass("is-valid")
			.html();
    }
}

function ftmpd() {
    for (i = 0; i < maOBJ.length; i++) {
        $("#" + maOBJ[i].name)
			.removeClass("is-invalid")
			.html();
        $("#" + maOBJ[i].name)
			.removeClass("is-valid")
			.html();
    }
}

function spt0() {
    var lines = $("#esp_tx")
		.val()
		.replace(/^[\n]+$/g, "")
		.split(/[\n]+/);
    return lines;
}

function smgh() {
    if (!device.mobile()) {
        $(".bt0st").click();
    }
}

// MENU - dublirovanmie
$(".bt0st1").click(function bjst1() {
    $(".bt0st").click();
});

function erxclr_uart() {
    $("#esp_tx").val("");
}

function etxclr_uart() {
    $("#esp_urx").val("");
    str_out1 = "";
}


function rm_b() {
    // remove deviser HD
    $(".mc1").removeClass("col-md-8 col-xl-8").html();
    $(".bsn0").removeClass("col-md-4 col-xl-4").html();
    $(".mc1").removeClass("noscroll collapse hide");
    $(".mc1").addClass("col-12").html();
}

function sh_b() {
    // deviser HD
    $(".mc1").remove("col-12").html();
    $(".mc1").addClass("col-md-8 col-xl-8").html();
    $(".bsn0").addClass("col-md-4 col-xl-4").html();
}

function rms_b() {
    //$('.bsn0').removeClass('col-12').html();
    $(".bsn0").removeClass("col-12 overlay").html();
    $(".mc1").removeClass("noscroll collapse hide");
}

function shs_b() {
    $(".bsn0").addClass("col-12 overlay").html();
    $(".mc1").addClass("noscroll collapse hide").html();
}



function fetch1(url, method, callback, time_out) {
    //console.log(url);
    var xhr = new XMLHttpRequest();
    xhr.onloadend = function () {
        callback(xhr.status, xhr.responseText);
    };
    xhr.ontimeout = function () {
        callback(-1, null);
    };
    xhr.open(method, url, true);
    xhr.setRequestHeader("Accept", "text/html");
// text/plain	;charset=UTF-8
	xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8"); 
    xhr.timeout = time_out * 200;
    xhr.send();
}


function txjs_ua(s, d) {
    seOBJ = $("#scntf").serializeArray();
    $("#btn1").prop("disabled", false);
    if (s != 200) {
        str_out1 += "Send command error" + "\n";
        //clearTimeout(rs.handle);
        //console.log("Connection proplem!");
    } else {
        if (typeof d === "string") {
            //console.log("priem ok!");
            try {
                uart_json = JSON.parse(d);
            } catch (e) {
                //console.log(e);
                return 0;
            }
        } else {
            uart_json.uart_out = "null";
            uart_json.uart_in = "null";
        }
        //console.log(uart_json);
        if (uart_json.uart_out == "") {
            str_out1 += "ACK" + "\n";
        } else {
            str_out1 += uart_json.uart_out + "\n";
        }
        //console.log(uart_json.uart_out);
    }
    var esp_uart_out_val = $("#esp_urx");
    if (esp_uart_out_val.val() != "") {
        esp_uart_out_val.val(esp_uart_out_val.val() + str_out1);
    } else {
        esp_uart_out_val.val(str_out1);
    }
    //console.log(str_out1);
    str_out1 = "";
    //clearTimeout(rs.handle);
    //rs = to(refr, 3);
    //refr();
}

window.onload = function () {
    $(".bt0st").attr("value", "off");
    $(".navia").addClass("list-group-item list-group-item-action bg-light border");
    $("#esp_tx").val("wsbuser.prints(node.heap());");
    $("#esp_urx").val("");
    //rs = setInterval(refr_rtc, 3000);
    i = 0;
    //$(".bsn0").collapse('show');
    smgh();
};
